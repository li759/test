{
	"nodes":[
		{"id":"1f379be0ac530871","type":"text","text":"```mermaid\n\nflowchart TD\n\n%% 主要初始化流程\n\nA[CarParking.__init__] --> B[ParkingMapNormal.__init__]\n\nA --> C[Vehicle.__init__]\n\nA --> D[LidarSimlator.__init__]\n\nA --> E[ActionMask.__init__]\n\nA --> F[Obs_Processor.__init__]\n\n%% Vehicle初始化\n\nC --> C1[KSModel.__init__]\n\n%% LidarSimlator初始化\n\nD --> D1[LidarSimlator.get_vehicle_boundary]\n\n%% ActionMask初始化\n\nE --> E1[ActionMask.init_vehicle_box]\n\nE --> E2[ActionMask.get_vehicle_lidar_base]\n\nE --> E3[ActionMask.precompute]\n\nE3 --> E3a[ActionMask._intersect]\n\nE3 --> E3b[ActionMask._linear_interpolate]\n\n%% 样式设置\n\nclassDef initClass fill:#e1f5fe,stroke:#01579b,stroke-width:2px\n\nclassDef stepClass fill:#f3e5f5,stroke:#4a148c,stroke-width:2px\n\nclassDef agentClass fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px\n\nclassDef envClass fill:#fff3e0,stroke:#e65100,stroke-width:2px\n\nclass A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,BB initClass\n\nclass CC,DD,EE,FF,GG,HH,II,JJ,KK,LL,MM,NN,OO,PP,QQ,RR,SS,TT,UU,VV,WW,XX,YY,ZZ,AAA,BBB,CCC,DDD,EEE,FFF,GGG,HHH,III,JJJ,KKK,LLL,MMM,NNN,OOO,PPP stepClass\n\nclass ZZ,AAA,BBB,CCC,DDD,EEE,FFF,GGG,HHH agentClass\n\nclass A,B,C,D,E,F,AA,BB,CC,DD,EE,FF,GG,HH,II,JJ,KK,LL,MM,NN,OO,PP,QQ,RR,SS,TT,UU,VV,WW,XX,YY,III,JJJ,KKK,LLL,MMM,NNN,OOO,PPP envClass\n\n```\n %% 环境设置\n    AA[CarParking.set_level] --> BB[ParkingMapNormal.__init__]","x":1520,"y":2320,"width":2058,"height":461},
		{"id":"5caf5206b131fa6e","type":"text","text":"```mermaid\n\nflowchart TD\nG[CarParkingWrapper.__init__]\n\nclassDef initClass fill:#e1f5fe,stroke:#01579b,stroke-width:2px\n\nclassDef stepClass fill:#f3e5f5,stroke:#4a148c,stroke-width:2px\n\nclassDef agentClass fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px\n\nclassDef envClass fill:#fff3e0,stroke:#e65100,stroke-width:2px\n\nclass A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,BB initClass\n\nclass CC,DD,EE,FF,GG,HH,II,JJ,KK,LL,MM,NN,OO,PP,QQ,RR,SS,TT,UU,VV,WW,XX,YY,ZZ,AAA,BBB,CCC,DDD,EEE,FFF,GGG,HHH,III,JJJ,KKK,LLL,MMM,NNN,OOO,PPP stepClass\n\nclass ZZ,AAA,BBB,CCC,DDD,EEE,FFF,GGG,HHH agentClass\n\nclass A,B,C,D,E,F,AA,BB,CC,DD,EE,FF,GG,HH,II,JJ,KK,LL,MM,NN,OO,PP,QQ,RR,SS,TT,UU,VV,WW,XX,YY,III,JJJ,KKK,LLL,MMM,NNN,OOO,PPP envClass\n\n```","x":1520,"y":2840,"width":360,"height":80},
		{"id":"a2dd8092f677d6f0","type":"text","text":"```mermaid\n\tflowchart TD\n\tH[SACAgent.__init__] --> I[AgentBase.__init__]\n\tI --> J[SACConfig.__init__]\n\t\n\tJ --> K[ConfigBase.__init__]\n\t\n\tJ --> L[ConfigBase.merge_configs]\n\t\n\tH --> M[ActionMask.__init__]\n\t\n\tM --> M1[ActionMask.init_vehicle_box]\n\t\n\tM --> M2[ActionMask.get_vehicle_lidar_base]\n\t\n\tM --> M3[ActionMask.precompute]\n\t\n\tM3 --> M3a[ActionMask._intersect]\n\t\n\tM3 --> M3b[ActionMask._linear_interpolate]\n\t\n\tH --> N[SACAgent._init_network]\n\t\n\tN --> O[MultiObsEmbedding.__init__]\n\t\n\tO --> P[AttentionNetwork.__init__]\n\t\n\tP --> Q[Transformer.__init__]\n\t\n\tQ --> Q1[Attention.__init__]\n\t\n\tQ --> Q2[PreNorm.__init__]\n\t\n\tQ --> Q3[FeedForward.__init__]\n\t\n\tO --> R[ImgEncoder.__init__]\n\t\n\tR --> R1[ConvBlock.__init__]\n\t\n\tO --> S[MultiObsEmbedding.orthogonal_init]\n\t\n\tN --> T[SACCriticAdapter.__init__]\n\t\n\tT --> U[MultiObsEmbedding.__init__]\n\t\n\tH --> V[ReplayMemory.__init__]\n\t\n\tH --> W[StateNorm.__init__]\n\tclassDef initClass fill:#e1f5fe,stroke:#01579b,stroke-width:2px\n\nclassDef stepClass fill:#f3e5f5,stroke:#4a148c,stroke-width:2px\n\nclassDef agentClass fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px\n\nclassDef envClass fill:#fff3e0,stroke:#e65100,stroke-width:2px\n\nclass A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,BB initClass\n\nclass CC,DD,EE,FF,GG,HH,II,JJ,KK,LL,MM,NN,OO,PP,QQ,RR,SS,TT,UU,VV,WW,XX,YY,ZZ,AAA,BBB,CCC,DDD,EEE,FFF,GGG,HHH,III,JJJ,KKK,LLL,MMM,NNN,OOO,PPP stepClass\n\nclass ZZ,AAA,BBB,CCC,DDD,EEE,FFF,GGG,HHH agentClass\n\nclass A,B,C,D,E,F,AA,BB,CC,DD,EE,FF,GG,HH,II,JJ,KK,LL,MM,NN,OO,PP,QQ,RR,SS,TT,UU,VV,WW,XX,YY,III,JJJ,KKK,LLL,MMM,NNN,OOO,PPP envClass\n\n```","x":1520,"y":2960,"width":2978,"height":660},
		{"id":"dd2938963dee1cc8","type":"text","text":"\n```mermaid\nflowchart TD\n\t\n\tX[SACAgent.load]\n\t\n\tY[RsPlanner.__init__]\n\t\n\tZ[ParkingAgent.__init__]\n\tclassDef initClass fill:#e1f5fe,stroke:#01579b,stroke-width:2px\n\nclassDef stepClass fill:#f3e5f5,stroke:#4a148c,stroke-width:2px\n\nclassDef agentClass fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px\n\nclassDef envClass fill:#fff3e0,stroke:#e65100,stroke-width:2px\n\nclass A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,BB initClass\n\nclass CC,DD,EE,FF,GG,HH,II,JJ,KK,LL,MM,NN,OO,PP,QQ,RR,SS,TT,UU,VV,WW,XX,YY,ZZ,AAA,BBB,CCC,DDD,EEE,FFF,GGG,HHH,III,JJJ,KKK,LLL,MMM,NNN,OOO,PPP stepClass\n\nclass ZZ,AAA,BBB,CCC,DDD,EEE,FFF,GGG,HHH agentClass\n\nclass A,B,C,D,E,F,AA,BB,CC,DD,EE,FF,GG,HH,II,JJ,KK,LL,MM,NN,OO,PP,QQ,RR,SS,TT,UU,VV,WW,XX,YY,III,JJJ,KKK,LLL,MMM,NNN,OOO,PPP envClass\n\n```","x":1520,"y":3680,"width":860,"height":120},
		{"id":"89a3899fa35fc23b","type":"text","text":"\n```mermaid\nflowchart TD\nAA[CarParking.set_level] --> BB[ParkingMapNormal.__init__]\nclassDef initClass fill:#e1f5fe,stroke:#01579b,stroke-width:2px\n\nclassDef stepClass fill:#f3e5f5,stroke:#4a148c,stroke-width:2px\n\nclassDef agentClass fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px\n\nclassDef envClass fill:#fff3e0,stroke:#e65100,stroke-width:2px\n\nclass A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,BB initClass\n\nclass CC,DD,EE,FF,GG,HH,II,JJ,KK,LL,MM,NN,OO,PP,QQ,RR,SS,TT,UU,VV,WW,XX,YY,ZZ,AAA,BBB,CCC,DDD,EEE,FFF,GGG,HHH,III,JJJ,KKK,LLL,MMM,NNN,OOO,PPP stepClass\n\nclass ZZ,AAA,BBB,CCC,DDD,EEE,FFF,GGG,HHH agentClass\n\nclass A,B,C,D,E,F,AA,BB,CC,DD,EE,FF,GG,HH,II,JJ,KK,LL,MM,NN,OO,PP,QQ,RR,SS,TT,UU,VV,WW,XX,YY,III,JJJ,KKK,LLL,MMM,NNN,OOO,PPP envClass\n\n```\n```\n","x":1520,"y":3880,"width":430,"height":200},
		{"id":"f816cb5ae68339b8","type":"text","text":"```mermaid\n\nflowchart TD\nCC[eval] --> DD[CarParkingWrapper.reset]\n\nDD --> EE[CarParking.reset]\n\nEE --> FF[ParkingMapNormal.reset]\n\nFF --> GG[generate_bay_dead_end_parking_case]\n\nGG --> GG1[random_uniform_num]\n\nGG --> GG2[State.__init__]\n\nGG --> GG3[State.create_box]\n\nEE --> HH[Vehicle.reset]\n\nHH --> HH1[State.create_box]\n\nEE --> II[CarParking.coord_transform_matrix]\nclassDef initClass fill:#e1f5fe,stroke:#01579b,stroke-width:2px\n\nclassDef stepClass fill:#f3e5f5,stroke:#4a148c,stroke-width:2px\n\nclassDef agentClass fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px\n\nclassDef envClass fill:#fff3e0,stroke:#e65100,stroke-width:2px\n\nclass A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,BB initClass\n\nclass CC,DD,EE,FF,GG,HH,II,JJ,KK,LL,MM,NN,OO,PP,QQ,RR,SS,TT,UU,VV,WW,XX,YY,ZZ,AAA,BBB,CCC,DDD,EEE,FFF,GGG,HHH,III,JJJ,KKK,LLL,MMM,NNN,OOO,PPP stepClass\n\nclass ZZ,AAA,BBB,CCC,DDD,EEE,FFF,GGG,HHH agentClass\n\nclass A,B,C,D,E,F,AA,BB,CC,DD,EE,FF,GG,HH,II,JJ,KK,LL,MM,NN,OO,PP,QQ,RR,SS,TT,UU,VV,WW,XX,YY,III,JJJ,KKK,LLL,MMM,NNN,OOO,PPP envClass\n\n```","x":1520,"y":4160,"width":1178,"height":650},
		{"id":"6be50d214fbbaa45","type":"text","text":"```mermaid\nflowchart TD\nIII[CarParkingWrapper.step] --> JJJ[action_rescale]\n\nIII --> KKK[CarParking.step]\n\nKKK --> LLL[Vehicle.step]\n\nLLL --> MMM[KSModel.step]\n\nLLL --> NNN[State.create_box]\n\nKKK --> OOO[CarParking._check_arrived]\n\nKKK --> PPP[CarParking._detect_collision]\nclassDef initClass fill:#e1f5fe,stroke:#01579b,stroke-width:2px\n\nclassDef stepClass fill:#f3e5f5,stroke:#4a148c,stroke-width:2px\n\nclassDef agentClass fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px\n\nclassDef envClass fill:#fff3e0,stroke:#e65100,stroke-width:2px\n\nclass A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,BB initClass\n\nclass CC,DD,EE,FF,GG,HH,II,JJ,KK,LL,MM,NN,OO,PP,QQ,RR,SS,TT,UU,VV,WW,XX,YY,ZZ,AAA,BBB,CCC,DDD,EEE,FFF,GGG,HHH,III,JJJ,KKK,LLL,MMM,NNN,OOO,PPP stepClass\n\nclass ZZ,AAA,BBB,CCC,DDD,EEE,FFF,GGG,HHH agentClass\n\nclass A,B,C,D,E,F,AA,BB,CC,DD,EE,FF,GG,HH,II,JJ,KK,LL,MM,NN,OO,PP,QQ,RR,SS,TT,UU,VV,WW,XX,YY,III,JJJ,KKK,LLL,MMM,NNN,OOO,PPP envClass\n\n```","x":1520,"y":5600,"width":1040,"height":466},
		{"id":"f7312dba8959d874","type":"text","text":"```mermaid\nflowchart TD\nXX[ParkingAgent.get_action] --> YY[ParkingAgent.executing_rs]\n\nZZ[SACAgent.get_action] --> AAA[SACAgent._actor_forward]\n\nAAA --> BBB[StateNorm.state_norm]\n\nAAA --> CCC[SACAgent.obs2tensor]\n\nAAA --> DDD[MultiObsEmbedding.forward]\n\nDDD --> EEE[ImgEncoder.forward]\n\nEEE --> EEE1[ConvBlock.forward]\n\nDDD --> FFF[AttentionNetwork.forward]\n\nFFF --> GGG[Transformer.forward]\n\nGGG --> GGG1[PreNorm.forward]\n\nGGG --> GGG2[Attention.forward]\n\nGGG --> GGG3[FeedForward.forward]\n\nAAA --> HHH[SACAgent._post_process_action]\n\nclassDef initClass fill:#e1f5fe,stroke:#01579b,stroke-width:2px\n\nclassDef stepClass fill:#f3e5f5,stroke:#4a148c,stroke-width:2px\n\nclassDef agentClass fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px\n\nclassDef envClass fill:#fff3e0,stroke:#e65100,stroke-width:2px\n\nclass A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,BB initClass\n\nclass CC,DD,EE,FF,GG,HH,II,JJ,KK,LL,MM,NN,OO,PP,QQ,RR,SS,TT,UU,VV,WW,XX,YY,ZZ,AAA,BBB,CCC,DDD,EEE,FFF,GGG,HHH,III,JJJ,KKK,LLL,MMM,NNN,OOO,PPP stepClass\n\nclass ZZ,AAA,BBB,CCC,DDD,EEE,FFF,GGG,HHH agentClass\n\nclass A,B,C,D,E,F,AA,BB,CC,DD,EE,FF,GG,HH,II,JJ,KK,LL,MM,NN,OO,PP,QQ,RR,SS,TT,UU,VV,WW,XX,YY,III,JJJ,KKK,LLL,MMM,NNN,OOO,PPP envClass\n\n```","x":1520,"y":4880,"width":1400,"height":640},
		{"id":"00c714c9050cd656","type":"text","text":"```mermaid\nflowchart TD\nJJ[CarParking.step] --> KK[CarParking.render]\n\nKK --> LL[CarParking._render]\n\nLL --> LL1[CarParking._coord_transform]\n\nKK --> MM[CarParking._get_img_observation]\n\nMM --> MM1[CarParking._coord_transform]\n\nKK --> NN[CarParking._process_img_observation]\n\nNN --> OO[Obs_Processor.process_img]\n\nOO --> OO1[Obs_Processor.change_bg_color]\n\nKK --> PP[CarParking._get_lidar_observation]\n\nPP --> QQ[LidarSimlator.get_observation]\n\nQQ --> QQ1[LidarSimlator._rotate_and_filter_obstacles]\n\nQQ --> QQ2[LidarSimlator._fast_calc_lidar_obs]\n\nKK --> RR[ActionMask.get_steps]\n\nRR --> RR1[ActionMask._linear_interpolate]\n\nRR --> RR2[ActionMask.post_process]\n\nKK --> SS[CarParking._get_targt_repr]\n\nJJ --> TT[CarParking._check_status]\n\nTT --> TT1[CarParking._check_obs_surrender]\n\nTT --> TT2[CarParking._detect_collision]\n\nTT --> TT3[CarParking._detect_outbound]\n\nTT --> TT4[CarParking._check_arrived]\n\nTT --> TT5[CarParking._check_time_exceeded]\n\nJJ --> UU[CarParking.get_reward]\n\nUU --> VV[CarParking._get_reward]\n\nVV --> WW[CarParking.get_angle_diff]\n\nclassDef initClass fill:#e1f5fe,stroke:#01579b,stroke-width:2px\n\nclassDef stepClass fill:#f3e5f5,stroke:#4a148c,stroke-width:2px\n\nclassDef agentClass fill:#e8f5e8,stroke:#1b5e20,stroke-width:2px\n\nclassDef envClass fill:#fff3e0,stroke:#e65100,stroke-width:2px\n\nclass A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,AA,BB initClass\n\nclass CC,DD,EE,FF,GG,HH,II,JJ,KK,LL,MM,NN,OO,PP,QQ,RR,SS,TT,UU,VV,WW,XX,YY,ZZ,AAA,BBB,CCC,DDD,EEE,FFF,GGG,HHH,III,JJJ,KKK,LLL,MMM,NNN,OOO,PPP stepClass\n\nclass ZZ,AAA,BBB,CCC,DDD,EEE,FFF,GGG,HHH agentClass\n\nclass A,B,C,D,E,F,AA,BB,CC,DD,EE,FF,GG,HH,II,JJ,KK,LL,MM,NN,OO,PP,QQ,RR,SS,TT,UU,VV,WW,XX,YY,III,JJJ,KKK,LLL,MMM,NNN,OOO,PPP envClass\n\n```","x":1520,"y":6120,"width":4580,"height":680}
	],
	"edges":[]
}